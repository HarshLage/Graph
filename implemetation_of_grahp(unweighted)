#include <iostream>
#include<list>
#include<bits/stdc++.h>
using namespace std;
class Graph{
  public:
  unordered_map<int,list<int>>ed;

  void addEdge(int u , int v , bool direction){
    if(direction==1){
      //in the case of directed graph
      ed[u].push_back(v);
    }
    else{
      //in the case of directed graph
      ed[u].push_back(v);
      ed[v].push_back(u);
    }

    cout<<"printing list" <<endl;
    print();

  }
  void print(){
    for(auto i : ed){
      
      cout<<i.first<<"->{";
      for(auto neighbour : i.second){
        cout<<neighbour<<",";
      }
      cout<<"}"<<endl;
    }
  }
};
int main() {
  Graph g;
  g.addEdge(0,1,1);
  g.addEdge(1,2,1);
  g.addEdge(1,3,1);
  g.addEdge(3,4,1);
  g.addEdge(2,3,1);
  g.addEdge(4,5,1);
  g.addEdge(5,3,1);
  
  return 0;
}
